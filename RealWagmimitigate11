function _calcFees(
    IMultipool.FeeGrowth memory growth,
    UserInfo memory user,
    uint256 lpAmount,
    uint256 reserve0,
    uint256 reserve1,
    uint256 totalSupply
) private pure returns (uint256 amount0, uint256 amount1) {
    amount0 = FullMath.mulDiv(
        lpAmount,
        growth.accPerShare0 - user.feeDebt0,
        FixedPoint128.Q128
    );
    amount1 = FullMath.mulDiv(
        lpAmount,
        growth.accPerShare1 - user.feeDebt1,
        FixedPoint128.Q128
    );

    // Adjust fees based on potential losses during rebalancing
    if (totalSupply > 0) {
        uint256 loss0 = (reserve0 * lpAmount) / totalSupply - amount0;
        uint256 loss1 = (reserve1 * lpAmount) / totalSupply - amount1;
        amount0 -= loss0;
        amount1 -= loss1;
    }
}
